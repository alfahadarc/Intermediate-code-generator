Line 1: parameter_list  : type_specifier ID
int a

Line 3:factor	: variable
a

Line 3:unary_expression : factor
a

Line 3: term : unary_expression
a

Line 3:statement: RETURN expression SEMICOLON
return ;

Line 3: statements : statement

return ;

Line 4:compound_statement : LCURL statements RCURL 
{
return ;}
Line 4: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
int fun ( int a ) {
return ;}

Line 4: unit : func_definition
int fun(int a){
return ;} 

Line 4: program : unit
int fun(int a){
return ;} 

Line 7: statement : var_declaration


Line 7: statements : statement


Line 8: factor: CONST_INT
0

Line 8:unary_expression : factor
0

Line 8: term : unary_expression
0

Line 8: expression_statement 	: expression SEMICOLON
;

Line 8:factor	: variable
a

Line 8:unary_expression : factor
a

Line 8: term : unary_expression
a

Line 8: factor: CONST_INT
6

Line 8:unary_expression : factor
6

Line 8: term : unary_expression
6

Line 8: expression_statement 	: expression SEMICOLON
;

Line 8:unary_expression : factor


Line 8: term : unary_expression


Line 10:compound_statement : LCURL RCURL 
{ }
Line 10: statement : compound_statement
{}

Line 10: statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement
for(; L0 L1 L2 L3 6) a

Line 10: statements : statements statement
 
for(;L0 L1 L2 L36)a

Line 11:compound_statement : LCURL statements RCURL 
{
for(;L0 L1 L2 L36)a}
Line 11: func_definition : type_specifier ID LPAREN RPAREN compound_statement
int main (  ) {
for(;L0 L1 L2 L36)a}

Line 11: unit : func_definition
int main(){
for(;L0 L1 L2 L36)a} 

Line 11: program : program unit
int fun(int a){
return ;} int main(){
for(;L0 L1 L2 L36)a}

Line 11: start: program
int fun(int a){
return ;} int main(){
for(;L0 L1 L2 L36)a} 

