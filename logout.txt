Line 1: parameter_list  : type_specifier ID
int a

Line 1: parameter_list  : parameter_list COMMA type_specifier ID
int a , int b

Line 3:factor	: variable
a

Line 3:unary_expression : factor
a

Line 3: term : unary_expression
a

Line 3:factor	: variable
b

Line 3:unary_expression : factor
b

Line 3: term : unary_expression
b

Line 3: simple_expressio : simple_expression ADDOP term
a + b

Line 3:statement: RETURN expression SEMICOLON
return ;

Line 3: statements : statement

return ;

Line 4:compound_statement : LCURL statements RCURL 
{
return ;}
Line 4: unit : func_definition
int 

Line 4: program : unit
int 

Line 7: statement : var_declaration


Line 7: statements : statement


Line 8: factor: CONST_INT
2

Line 8:unary_expression : factor
2

Line 8: term : unary_expression
2

Line 8: arguments : logic_expression
 

Line 8: factor: CONST_INT
3

Line 8:unary_expression : factor
3

Line 8: term : unary_expression
3

Line 8: arguments : arguments COMMA logic_expression
 , 

Line 8: argument_list : arguments
, 

Line 8:factor: ID LPAREN argument_list RPAREN
fun(,)

Line 8:unary_expression : factor
fun(,)

Line 8: term : unary_expression
fun(,)

Line 8: expression_statement 	: expression SEMICOLON
;

Line 8: statement : expression_statement
;

Line 8: statements : statements statement
 ;

Line 9:compound_statement : LCURL statements RCURL 
{;}
Line 9: unit : func_definition
int 

Line 9: program : program unit
int int

Line 9: start: program
int int 

