Line 4: statement : var_declaration


Line 4: statements : statement


Line 6: factor: CONST_INT
3

Line 6:unary_expression : factor
3

Line 6: term : unary_expression
3

Line 6: expression_statement 	: expression SEMICOLON
;

Line 6: statement : expression_statement
;

Line 6: statements : statements statement
 ;

Line 7: factor: CONST_INT
8

Line 7:unary_expression : factor
8

Line 7: term : unary_expression
8

Line 7: expression_statement 	: expression SEMICOLON
;

Line 7: statement : expression_statement
;

Line 7: statements : statements statement
; ;

Line 8: factor: CONST_INT
6

Line 8:unary_expression : factor
6

Line 8: term : unary_expression
6

Line 8: expression_statement 	: expression SEMICOLON
;

Line 8: statement : expression_statement
;

Line 8: statements : statements statement
;; ;

Line 10:factor	: variable
i

Line 10:unary_expression : factor
i

Line 10: term : unary_expression
i

Line 10: factor: CONST_INT
3

Line 10:unary_expression : factor
3

Line 10: term : unary_expression
3

Line 12:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(j);

Line 12: statements : statement

println(j);

Line 13:compound_statement : LCURL statements RCURL 
{
println(j);}
Line 13: statement : compound_statement
{
println(j);}

Line 15: statement: IF LPAREN expression RPAREN statement
Line 15: statements : statements statement
;;; 

Line 15:factor	: variable
j

Line 15:unary_expression : factor
j

Line 15: term : unary_expression
j

Line 15: factor: CONST_INT
8

Line 15:unary_expression : factor
8

Line 15: term : unary_expression
8

Line 17:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(i);

Line 17: statements : statement

println(i);

Line 18:compound_statement : LCURL statements RCURL 
{
println(i);}
Line 18: statement : compound_statement
{
println(i);}

Line 21:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(k);

Line 21: statements : statement

println(k);

Line 22:compound_statement : LCURL statements RCURL 
{
println(k);}
Line 22: statement : compound_statement
{
println(k);}

Line 22: statement: IF LPAREN expression RPAREN statement ELSE statement
Line 22: statements : statements statement
;;; L5

Line 24:factor	: variable
k

Line 24:unary_expression : factor
k

Line 24: term : unary_expression
k

Line 24: factor: CONST_INT
6

Line 24:unary_expression : factor
6

Line 24: term : unary_expression
6

Line 26:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(k);

Line 26: statements : statement

println(k);

Line 27:compound_statement : LCURL statements RCURL 
{
println(k);}
Line 27: statement : compound_statement
{
println(k);}

Line 28:factor	: variable
j

Line 28:unary_expression : factor
j

Line 28: term : unary_expression
j

Line 28: factor: CONST_INT
8

Line 28:unary_expression : factor
8

Line 28: term : unary_expression
8

Line 30:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(j);

Line 30: statements : statement

println(j);

Line 31:compound_statement : LCURL statements RCURL 
{
println(j);}
Line 31: statement : compound_statement
{
println(j);}

Line 32:factor	: variable
i

Line 32:unary_expression : factor
i

Line 32: term : unary_expression
i

Line 32: factor: CONST_INT
5

Line 32:unary_expression : factor
5

Line 32: term : unary_expression
5

Line 34:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(i);

Line 34: statements : statement

println(i);

Line 35:compound_statement : LCURL statements RCURL 
{
println(i);}
Line 35: statement : compound_statement
{
println(i);}

Line 38: factor: CONST_INT
0

Line 38:unary_expression : factor
0

Line 38: term : unary_expression
0

Line 38: expression_statement 	: expression SEMICOLON
;

Line 38: statement : expression_statement
;

Line 38: statements : statement
;

Line 39:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(k);

Line 39: statements : statements statement
; 
println(k);

Line 40:compound_statement : LCURL statements RCURL 
{;
println(k);}
Line 40: statement : compound_statement
{;
println(k);}

Line 40: statement: IF LPAREN expression RPAREN statement ELSE statement
Line 40: statement: IF LPAREN expression RPAREN statement ELSE statement
Line 40: statement: IF LPAREN expression RPAREN statement ELSE statement
Line 40: statements : statements statement
;;;L5 L9

Line 42: factor: CONST_INT
0

Line 42:unary_expression : factor
0

Line 42: term : unary_expression
0

Line 42:statement: RETURN expression SEMICOLON
return ;

Line 42: statements : statements statement
;;;L5L9 
return ;

Line 43:compound_statement : LCURL statements RCURL 
{;;;L5L9
return ;}
Line 43: unit : func_definition
int 

Line 43: program : unit
int 

Line 44: start: program
