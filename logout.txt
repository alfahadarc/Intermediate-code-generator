Line 3: statement : var_declaration


Line 3: statements : statement


Line 4:unary_expression : factor


Line 4: term : unary_expression


Line 4: expression_statement 	: expression SEMICOLON
;

Line 4: statement : expression_statement
;

Line 4: statements : statements statement
 ;

Line 5: factor: CONST_INT
4

Line 5:unary_expression : factor
4

Line 5: term : unary_expression
4

Line 5:unary_expression : factor


Line 5: term : unary_expression


Line 5: expression_statement 	: expression SEMICOLON
;

Line 5: statement : expression_statement
;

Line 5: statements : statements statement
; ;

Line 6:unary_expression : factor


Line 6: term : unary_expression


Line 6: expression_statement 	: expression SEMICOLON
;

Line 6: statement : expression_statement
;

Line 6: statements : statements statement
;; ;

Line 7: factor: CONST_INT
1

Line 7:unary_expression : factor
1

Line 7: term : unary_expression
1

Line 7:unary_expression : factor


Line 7: term : unary_expression


Line 7: expression_statement 	: expression SEMICOLON
;

Line 7: statement : expression_statement
;

Line 7: statements : statements statement
;;; ;

Line 8:compound_statement : LCURL statements RCURL 
{;;;;}


ScopeTable # 1.1 
list: 0 -> <d:ID>
list: 7 -> <a:ID>
list: 8 -> <b:ID>
list: 9 -> <c:ID>
ScopeTable # 1 
list: 7 -> <main:ID>


Line 8: func_definition : type_specifier ID LPAREN RPAREN compound_statement
int main (  ) {;;;;}

Line 8: unit : func_definition
int main(){;;;;} 

Line 8: program : unit
int main(){;;;;} 

Line 8: start: program
int main(){;;;;} 

