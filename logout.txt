Line 4: statement : var_declaration


Line 4: statements : statement


Line 6: factor: CONST_INT
1

Line 6:unary_expression : factor
1

Line 6: term : unary_expression
1

Line 6: expression_statement 	: expression SEMICOLON
;

Line 6: statement : expression_statement
;

Line 6: statements : statements statement
 ;

Line 7:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(i);

Line 7: statements : statements statement
; 
println(i);

Line 8: factor: CONST_INT
5

Line 8:unary_expression : factor
5

Line 8: term : unary_expression
5

Line 8: factor: CONST_INT
8

Line 8:unary_expression : factor
8

Line 8: term : unary_expression
8

Line 8: simple_expressio : simple_expression ADDOP term
5 + 8

Line 8: expression_statement 	: expression SEMICOLON
;

Line 8: statement : expression_statement
;

Line 8: statements : statements statement
;
println(i); ;

Line 9:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(j);

Line 9: statements : statements statement
;
println(i);; 
println(j);

Line 10:factor	: variable
i

Line 10:unary_expression : factor
i

Line 10: term : unary_expression
i

Line 10: factor: CONST_INT
2

Line 10:unary_expression : factor
2

Line 10: term : unary_expression
2

Line 10:factor	: variable
j

Line 10:unary_expression : factor
j

Line 10: term : term MULOP unary_expression
2 * j

Line 10: simple_expressio : simple_expression ADDOP term
i + 2*j

Line 10: expression_statement 	: expression SEMICOLON
;

Line 10: statement : expression_statement
;

Line 10: statements : statements statement
;
println(i);;
println(j); ;

Line 11:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(k);

Line 11: statements : statements statement
;
println(i);;
println(j);; 
println(k);

Line 13:factor	: variable
k

Line 13:unary_expression : factor
k

Line 13: term : unary_expression
k

Line 13: factor: CONST_INT
9

Line 13:unary_expression : factor
9

Line 13: term : term MULOP unary_expression
k % 9

Line 13: expression_statement 	: expression SEMICOLON
;

Line 13: statement : expression_statement
;

Line 13: statements : statements statement
;
println(i);;
println(j);;
println(k); ;

Line 14:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(m);

Line 14: statements : statements statement
;
println(i);;
println(j);;
println(k);; 
println(m);

Line 16:factor	: variable
m

Line 16:unary_expression : factor
m

Line 16: term : unary_expression
m

Line 16:factor	: variable
ll

Line 16:unary_expression : factor
ll

Line 16: term : unary_expression
ll

Line 16: expression_statement 	: expression SEMICOLON
;

Line 16: statement : expression_statement
;

Line 16: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m); ;

Line 17:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(n);

Line 17: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);; 
println(n);

Line 19:factor	: variable
i

Line 19:unary_expression : factor
i

Line 19: term : unary_expression
i

Line 19:factor	: variable
j

Line 19:unary_expression : factor
j

Line 19: term : unary_expression
j

Line 19: expression_statement 	: expression SEMICOLON
;

Line 19: statement : expression_statement
;

Line 19: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n); ;

Line 20:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(o);

Line 20: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);; 
println(o);

Line 22:factor	: variable
n

Line 22:unary_expression : factor
n

Line 22: term : unary_expression
n

Line 22:factor	: variable
o

Line 22:unary_expression : factor
o

Line 22: term : unary_expression
o

Line 22: expression_statement 	: expression SEMICOLON
;

Line 22: statement : expression_statement
;

Line 22: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o); ;

Line 23:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(p);

Line 23: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);; 
println(p);

Line 25:factor	: variable
n

Line 25:unary_expression : factor
n

Line 25: term : unary_expression
n

Line 25:factor	: variable
o

Line 25:unary_expression : factor
o

Line 25: term : unary_expression
o

Line 25: expression_statement 	: expression SEMICOLON
;

Line 25: statement : expression_statement
;

Line 25: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);;
println(p); ;

Line 26:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(p);

Line 26: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);;
println(p);; 
println(p);

Line 28:unary_expression : factor


Line 28: term : unary_expression


Line 28: expression_statement 	: expression SEMICOLON
;

Line 28: statement : expression_statement
;

Line 28: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);;
println(p);;
println(p); ;

Line 29:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(p);

Line 29: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);;
println(p);;
println(p);; 
println(p);

Line 31:factor	: variable
p

Line 31:unary_expression : factor
p

Line 31:unary_expression : ADDOP unary_expression
!-

Line 31: term : unary_expression
!p

Line 31: expression_statement 	: expression SEMICOLON
;

Line 31: statement : expression_statement
;

Line 31: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);;
println(p);;
println(p);;
println(p); ;

Line 32:statement: PRINTLN LPAREN ID RPAREN SEMICOLON
println(k);

Line 32: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);;
println(p);;
println(p);;
println(p);; 
println(k);

Line 34: factor: CONST_INT
0

Line 34:unary_expression : factor
0

Line 34: term : unary_expression
0

Line 34:statement: RETURN expression SEMICOLON
return ;

Line 34: statements : statements statement
;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);;
println(p);;
println(p);;
println(p);;
println(k); 
return ;

Line 35:compound_statement : LCURL statements RCURL 
{;
println(i);;
println(j);;
println(k);;
println(m);;
println(n);;
println(o);;
println(p);;
println(p);;
println(p);;
println(k);
return ;}
Line 35: unit : func_definition
int 

Line 35: program : unit
int 

Line 36: start: program
