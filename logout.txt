Line 1: parameter_list  : type_specifier ID
int a

Line 3:factor	: variable
a

Line 3:unary_expression : factor
a

Line 3: term : unary_expression
a

Line 3:statement: RETURN expression SEMICOLON
return ;

Line 3: statements : statement

return ;

Line 4:compound_statement : LCURL statements RCURL 
{
return ;}
Line 4: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
int fun ( int a ) {
return ;}

Line 4: unit : func_definition
int fun(int a){
return ;} 

Line 4: program : unit
int fun(int a){
return ;} 

Line 7: statement : var_declaration


Line 7: statements : statement


Line 8: factor: CONST_INT
2

Line 8:unary_expression : factor
2

Line 8: term : unary_expression
2

Line 8: factor: CONST_INT
5

Line 8:unary_expression : factor
5

Line 8: term : unary_expression
5

Line 10: factor: CONST_INT
0

Line 10:unary_expression : factor
0

Line 10: term : unary_expression
0

Line 10: expression_statement 	: expression SEMICOLON
;

Line 10: statement : expression_statement
;

Line 10: statements : statement
;

Line 11:compound_statement : LCURL statements RCURL 
{;}
Line 11: statement : compound_statement
{;}

Line 14: factor: CONST_INT
10

Line 14:unary_expression : factor
10

Line 14: term : unary_expression
10

Line 14: expression_statement 	: expression SEMICOLON
;

Line 14: statement : expression_statement
;

Line 14: statements : statement
;

Line 15:compound_statement : LCURL statements RCURL 
{;}
Line 15: statement : compound_statement
{;}

Line 15: statement: IF LPAREN expression RPAREN statement ELSE statement
Line 15: statements : statements statement
 L2

Line 16:compound_statement : LCURL statements RCURL 
{L2}
Line 16: func_definition : type_specifier ID LPAREN RPAREN compound_statement
int main (  ) {L2}

Line 16: unit : func_definition
int main(){L2} 

Line 16: program : program unit
int fun(int a){
return ;} int main(){L2}

Line 16: start: program
int fun(int a){
return ;} int main(){L2} 

